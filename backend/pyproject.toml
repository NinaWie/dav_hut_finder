[project]
name = "hutfinder"
version = "0.0.1"
description = "Filter and search huts for availability in the Alps"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "MÃ¤uschens"}
]
license = {file = "LICENSE"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

dependencies = [
    "numpy==2.0.0",
    "geopandas==1.0.1",
    "matplotlib==3.9.1",
    "beautifulsoup4==4.12.3",
    "requests==2.32.3",
    "pyrosm==0.6.2",
    "flask==3.0.3",
    "flask-cors==4.0.1",
    "haversine==2.8.1",
    "selenium==4.22.0",
]

[project.urls]
repository = "https://github.com/NinaWie/public_transport_airbnb"

[project.optional-dependencies]
test = [
    "pytest"
]
linting = [
    "pre-commit==2.17.0"
]

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]

[tool.ruff]
exclude = [
    "__init__.py",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 120
indent-width = 4

# Assume Python 3.10 (Ubuntu 22.04)
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F", "I", "D", "ANN", "B", "SIM", "TID", "FIX", "D213"]
ignore = ["D211", "D202", "D107", "ANN201", "ANN101", "D407", "ANN401", "D212"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
